#!/usr/bin/env node

const program = require('commander')
const axios = require('axios')
const homedir = require('os').homedir()
const fs = require('fs')
const path = require('path')
const ora = require('ora')
const chalk = require('chalk')

program
  .option('-i --issueNo <value>', '只能拉取指定的issue')
  .option('-s --state <value>', '拉取某个状态的issue，可选open/close/all，默认all')
  .option('-u --username <value>', 'github用户名')
  .option('-r --repo <value>', '仓库名称')
  .parse(process.argv)

let config =JSON.parse(fs.readFileSync(path.join(homedir, '.issue.json'), 'utf-8'))
// console.log(config);
// Object.assign(config, {
//   state: program.state,
//   username: program.state,
//   repo: program.state
// })
// console.log(config);

const getIssue = (issueNo = '') => {
  const spinner = ora('start pull issue...').start()
  // https://developer.github.com/v3/issues/#list-issues-for-a-repository
  axios({
    methods: 'get',
    headers: { 'content-type': 'application/vnd.github.VERSION.raw+json' },
    url: `https://api.github.com/repos/${config.username}/${config.repo}/issues${issueNo ? '/'+ issueNo : ''}`,
    params: {
      state: config.state
    }
  }).then(docs => {
    let issueList = issueNo ? [docs.data] : docs.data
    for (const doc of issueList) {
      spinner.text = `pull ${doc.title}...` 
      try {
        fs.writeFileSync(path.join(process.cwd(), `${doc.title}.md`), doc.body)
        spinner.succeed(`${doc.title} pull succeed！`)
      } catch (error) {
        spinner.fail(`${doc.title} pull failed`)
        console.log(chalk.red(error))
      }
    }
  }, err => {
    spinner.stop()
    console.log(chalk.red(err))
  })
}

getIssue(Number(program.issueNo))

// 获取所有的issue
// if (!program.issueNo) {
//   getIssue()
// } else {
  // 获取指定的issue
  // const issueNo = num.map(no => {
  //   if (!Number.isNaN(Number(no))) {
  //     return Number(no)
  //   }
  // })

  // if (!issueNo.length) {
  //   console.error(chalk.red('请输入正确的issue的标号'))
  //   return
  // }
  
  // getIssue(Number(issueNo))
// }
