#!/usr/bin/env node

const program = require('commander')
const axios = require('axios')
const homedir = require('os').homedir()
const fs = require('fs')
const path = require('path')
const ora = require('ora')
const chalk = require('chalk')

const issueList = (value) => {
  return value.split(',').map(Number)
}

program
  .option('-i --issueNo [value]', '拉取指定的issue，多个使用逗号分隔', issueList)
  .option('-s --state [value]', '拉取某个状态的issue，可选open/close/all，默认all')
  .option('-u --username [value]', 'github用户名')
  .option('-r --repo [value]', '仓库名称')
  .parse(process.argv)

let config =JSON.parse(fs.readFileSync(path.join(homedir, '.issue.json'), 'utf-8'))
let userTempConf = {}
  
if (program.state) {
  userTempConf['state'] = program.state
}

if (program.username) {
  userTempConf['username'] = program.username
}

if (program.repo) {
  userTempConf['repo'] = program.repo
}

Object.assign(config,userTempConf)

const getIssue = (issueNo) => {
  const spinner = ora('start pull issue...').start()
  // https://developer.github.com/v3/issues/#list-issues-for-a-repository
  axios({
    methods: 'get',
    headers: { 'content-type': 'application/vnd.github.VERSION.raw+json' },
    url: `https://api.github.com/repos/${config.username}/${config.repo}/issues${issueNo !== 'all' ? '/'+ issueNo : ''}`,
    params: {
      state: config.state
    }
  }).then(docs => {
    let issueList = issueNo ? [docs.data] : docs.data
    for (const doc of issueList) {
      spinner.text = `pull ${doc.title}...` 
      try {
        fs.writeFileSync(path.join(process.cwd(), `${doc.title}.md`), doc.body)
        spinner.succeed(`${doc.title} pull succeed！`)
      } catch (error) {
        spinner.fail(`${doc.title} pull failed`)
        console.log(chalk.red(error))
      }
    }
  }, err => {
    spinner.stop()
    console.log(chalk.red(err))
  })
}

(program.issueNo || ['all']).map(getIssue)
